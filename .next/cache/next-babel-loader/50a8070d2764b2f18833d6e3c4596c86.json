{"ast":null,"code":"var _jsxFileName = \"/Applications/CrowdMOT/crowdmot-nextjs/components/shared/components/PopupDialog/PopupDialog.jsx\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Label, Input } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './popupDialog.scss';\n\nconst PopupDialog = ({\n  isOpen,\n  title,\n  message,\n  onToggle,\n  onDontShowAgainChange,\n  onYesClick,\n  hasDontShowAgain,\n  hasCloseButton,\n  hasYesNoButton\n}) => __jsx(Modal, {\n  isOpen: isOpen,\n  toggle: onToggle,\n  backdrop: \"static\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 2\n  }\n}, __jsx(ModalHeader, {\n  toggle: onToggle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, title), __jsx(ModalBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, message), __jsx(ModalFooter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, hasDontShowAgain && __jsx(\"div\", {\n  className: \"d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, __jsx(Label, {\n  check: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 6\n  }\n}, __jsx(Input, {\n  type: \"checkbox\",\n  onChange: onDontShowAgainChange,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }\n}), 'Don\\'t show again')), hasYesNoButton && __jsx(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, __jsx(Button, {\n  color: \"primary\",\n  onClick: onYesClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 6\n  }\n}, \"Yes\"), __jsx(Button, {\n  color: \"secondary\",\n  onClick: onToggle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 6\n  }\n}, \"No\")), hasCloseButton && __jsx(Button, {\n  color: \"secondary\",\n  onClick: onToggle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 24\n  }\n}, \"Close\")));\n\nPopupDialog.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  message: PropTypes.string,\n  hasDontShowAgain: PropTypes.bool,\n  hasCloseButton: PropTypes.bool,\n  hasYesNoButton: PropTypes.bool,\n  onToggle: PropTypes.func,\n  onYesClick: PropTypes.func,\n  onDontShowAgainChange: PropTypes.func\n};\nPopupDialog.defaultProps = {\n  isOpen: false,\n  title: '',\n  message: '',\n  hasDontShowAgain: false,\n  hasCloseButton: false,\n  hasYesNoButton: false,\n  onToggle: () => {},\n  onYesClick: () => {},\n  onDontShowAgainChange: () => {}\n};\nexport default PopupDialog;","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/components/shared/components/PopupDialog/PopupDialog.jsx"],"names":["React","Fragment","PropTypes","Modal","ModalHeader","ModalBody","ModalFooter","Button","Label","Input","PopupDialog","isOpen","title","message","onToggle","onDontShowAgainChange","onYesClick","hasDontShowAgain","hasCloseButton","hasYesNoButton","propTypes","bool","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tModal, ModalHeader, ModalBody, ModalFooter, Button, Label, Input,\n} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './popupDialog.scss';\n\nconst PopupDialog = ({\n\tisOpen,\n\ttitle,\n\tmessage,\n\tonToggle,\n\tonDontShowAgainChange,\n\tonYesClick,\n\thasDontShowAgain,\n\thasCloseButton,\n\thasYesNoButton,\n}) => (\n\t<Modal isOpen={ isOpen } toggle={ onToggle } backdrop='static'>\n\t\t<ModalHeader toggle={ onToggle }>{title}</ModalHeader>\n\t\t<ModalBody>\n\t\t\t{message}\n\t\t</ModalBody>\n\t\t<ModalFooter>\n\t\t\t{ hasDontShowAgain && (\n\t\t\t\t<div className='d-flex align-items-center'>\n\t\t\t\t\t<Label check>\n\t\t\t\t\t\t<Input type='checkbox' onChange={ onDontShowAgainChange } />\n\t\t\t\t\t\t{'Don\\'t show again'}\n\t\t\t\t\t</Label>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{ hasYesNoButton && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Button color='primary' onClick={ onYesClick }>Yes</Button>\n\t\t\t\t\t<Button color='secondary' onClick={ onToggle }>No</Button>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t{ hasCloseButton && <Button color='secondary' onClick={ onToggle }>Close</Button>}\n\t\t</ModalFooter>\n\t</Modal>\n);\nPopupDialog.propTypes = {\n\tisOpen: PropTypes.bool,\n\ttitle: PropTypes.string,\n\tmessage: PropTypes.string,\n\thasDontShowAgain: PropTypes.bool,\n\thasCloseButton: PropTypes.bool,\n\thasYesNoButton: PropTypes.bool,\n\tonToggle: PropTypes.func,\n\tonYesClick: PropTypes.func,\n\tonDontShowAgainChange: PropTypes.func,\n};\nPopupDialog.defaultProps = {\n\tisOpen: false,\n\ttitle: '',\n\tmessage: '',\n\thasDontShowAgain: false,\n\thasCloseButton: false,\n\thasYesNoButton: false,\n\tonToggle: () => {},\n\tonYesClick: () => {},\n\tonDontShowAgainChange: () => {},\n};\n\nexport default PopupDialog;\n"]},"metadata":{},"sourceType":"module"}