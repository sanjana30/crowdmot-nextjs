{"ast":null,"code":"import { withBasicIdentities } from '../../../shared/models/node/index';\n\nvar canClearRedundantIncidents = function canClearRedundantIncidents(state) {\n  return {\n    clearRedundantIncidents: function clearRedundantIncidents(status) {\n      var incidents = state.incidents;\n\n      for (var i = incidents.length - 1; i > 0; i -= 1) {\n        if (incidents[i].status === status && incidents[i].status === incidents[i - 1].status) {\n          incidents.splice(i, 1);\n        }\n      }\n    }\n  };\n};\n\nvar Rectangle = function Rectangle(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      label = _ref.label,\n      color = _ref.color,\n      _ref$isManipulatable = _ref.isManipulatable,\n      isManipulatable = _ref$isManipulatable === void 0 ? true : _ref$isManipulatable,\n      _ref$incidents = _ref.incidents,\n      incidents = _ref$incidents === void 0 ? [] : _ref$incidents,\n      _ref$childrenNames = _ref.childrenNames,\n      childrenNames = _ref$childrenNames === void 0 ? [] : _ref$childrenNames,\n      _ref$parentName = _ref.parentName,\n      parentName = _ref$parentName === void 0 ? '' : _ref$parentName;\n  var state = {\n    color: color,\n    isManipulatable: isManipulatable,\n    incidents: incidents,\n    childrenNames: childrenNames,\n    parentName: parentName\n  };\n  return Object.assign(state, withBasicIdentities({\n    id: id,\n    name: name,\n    label: label\n  }), canClearRedundantIncidents(state));\n};\n\nexport { Rectangle };","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/models/rectangle/index.js"],"names":["withBasicIdentities","canClearRedundantIncidents","state","clearRedundantIncidents","status","incidents","i","length","splice","Rectangle","id","name","label","color","isManipulatable","childrenNames","parentName","Object","assign"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,mCAApC;;AAEA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,KAAK;AAAA,SAAK;AAC5CC,IAAAA,uBAAuB,EAAE,iCAACC,MAAD,EAAY;AAAA,UAC5BC,SAD4B,GACdH,KADc,CAC5BG,SAD4B;;AAEpC,WAAK,IAAIC,CAAC,GAAGD,SAAS,CAACE,MAAV,GAAmB,CAAhC,EAAmCD,CAAC,GAAG,CAAvC,EAA0CA,CAAC,IAAI,CAA/C,EAAkD;AACjD,YAAID,SAAS,CAACC,CAAD,CAAT,CAAaF,MAAb,KAAwBA,MAAxB,IAAkCC,SAAS,CAACC,CAAD,CAAT,CAAaF,MAAb,KAAwBC,SAAS,CAACC,CAAC,GAAG,CAAL,CAAT,CAAiBF,MAA/E,EAAuF;AACtFC,UAAAA,SAAS,CAACG,MAAV,CAAiBF,CAAjB,EAAoB,CAApB;AACA;AACD;AACD;AAR2C,GAAL;AAAA,CAAxC;;AAWA,IAAMG,SAAS,GAAG,SAAZA,SAAY,OASZ;AAAA,MARLC,EAQK,QARLA,EAQK;AAAA,MAPLC,IAOK,QAPLA,IAOK;AAAA,MANLC,KAMK,QANLA,KAMK;AAAA,MALLC,KAKK,QALLA,KAKK;AAAA,kCAJLC,eAIK;AAAA,MAJLA,eAIK,qCAJa,IAIb;AAAA,4BAHLT,SAGK;AAAA,MAHLA,SAGK,+BAHO,EAGP;AAAA,gCAFLU,aAEK;AAAA,MAFLA,aAEK,mCAFW,EAEX;AAAA,6BADLC,UACK;AAAA,MADLA,UACK,gCADQ,EACR;AACL,MAAMd,KAAK,GAAG;AACbW,IAAAA,KAAK,EAALA,KADa;AAEbC,IAAAA,eAAe,EAAfA,eAFa;AAGbT,IAAAA,SAAS,EAATA,SAHa;AAIbU,IAAAA,aAAa,EAAbA,aAJa;AAKbC,IAAAA,UAAU,EAAVA;AALa,GAAd;AAOA,SAAOC,MAAM,CAACC,MAAP,CAAchB,KAAd,EAAqBF,mBAAmB,CAAC;AAAEU,IAAAA,EAAE,EAAFA,EAAF;AAAMC,IAAAA,IAAI,EAAJA,IAAN;AAAYC,IAAAA,KAAK,EAALA;AAAZ,GAAD,CAAxC,EAA+DX,0BAA0B,CAACC,KAAD,CAAzF,CAAP;AACA,CAlBD;;AAoBA,SACCO,SADD","sourcesContent":["import { withBasicIdentities } from '../../../shared/models/node/index';\n\nconst canClearRedundantIncidents = state => ({\n\tclearRedundantIncidents: (status) => {\n\t\tconst { incidents } = state;\n\t\tfor (let i = incidents.length - 1; i > 0; i -= 1) {\n\t\t\tif (incidents[i].status === status && incidents[i].status === incidents[i - 1].status) {\n\t\t\t\tincidents.splice(i, 1);\n\t\t\t}\n\t\t}\n\t},\n});\n\nconst Rectangle = ({\n\tid,\n\tname,\n\tlabel,\n\tcolor,\n\tisManipulatable = true,\n\tincidents = [],\n\tchildrenNames = [],\n\tparentName = '',\n}) => {\n\tconst state = {\n\t\tcolor,\n\t\tisManipulatable,\n\t\tincidents,\n\t\tchildrenNames,\n\t\tparentName,\n\t};\n\treturn Object.assign(state, withBasicIdentities({ id, name, label }), canClearRedundantIncidents(state));\n};\n\nexport {\n\tRectangle,\n};\n"]},"metadata":{},"sourceType":"module"}