{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from \"isomorphic-unfetch\";\nimport useSWR from \"swr\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nexport default function useAuth(initialData) {\n  const {\n    data: user\n  } = useSWR(\"/api/user\", async route => {\n    const authRequest = await fetch(route, {\n      header: {\n        authorization: Cookie.get(\"_wsp\")\n      }\n    });\n\n    if (authRequest.ok) {\n      return authRequest.json();\n    } else {\n      Cookie.remove(\"_wsp\");\n    }\n  }, {\n    initialData\n  });\n  return _objectSpread({}, user, {\n    logout() {\n      Cookie.remove(\"_wsp\");\n    }\n\n  });\n}","map":null,"metadata":{},"sourceType":"module"}