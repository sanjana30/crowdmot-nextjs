{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport jwt from \"jsonwebtoken\";\nimport fetch from \"isomorphic-unfetch\";\nimport Cookies from \"cookies\";\nimport DatabaseService from \"./database\";\nimport User from \"../models/User\";\n\nfunction createUser(_x) {\n  return _createUser.apply(this, arguments);\n}\n\nfunction _createUser() {\n  _createUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pwd) {\n    var request, _yield$request$json, id;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://paassword.now.sh/api/create\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                pwd: pwd\n              })\n            });\n\n          case 2:\n            request = _context.sent;\n\n            if (!request.ok) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return request.json();\n\n          case 6:\n            _yield$request$json = _context.sent;\n            id = _yield$request$json.id;\n            return _context.abrupt(\"return\", id);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createUser.apply(this, arguments);\n}\n\nfunction validatePassword(_x2, _x3) {\n  return _validatePassword.apply(this, arguments);\n} // Sign our JWT / encrypting\n\n\nfunction _validatePassword() {\n  _validatePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(passwordId, pwd) {\n    var request, _yield$request$json2, valid;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"https://paassword.now.sh/api/get/\".concat(passwordId), {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                pwd: pwd\n              })\n            });\n\n          case 2:\n            request = _context2.sent;\n\n            if (!request.ok) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 6;\n            return request.json();\n\n          case 6:\n            _yield$request$json2 = _context2.sent;\n            valid = _yield$request$json2.valid;\n            return _context2.abrupt(\"return\", valid);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _validatePassword.apply(this, arguments);\n}\n\nfunction sign(payload) {\n  return new Promise(function (resolve, reject) {\n    jwt.sign(payload, process.env.SECRET || \"secret\", {\n      expiresIn: \"1d\"\n    }, function (err, token) {\n      if (err) {\n        return reject(err);\n      }\n\n      resolve(token);\n    });\n  });\n} // Veriy\n\n\nfunction verify(token) {\n  return new Promise(function (resolve, reject) {\n    jwt.verify(token, process.env.SECRET || \"secret\", function (err, payload) {\n      if (err) {\n        return reject(err);\n      }\n\n      resolve(payload);\n    });\n  });\n}\n\nfunction getUserFromCookie(_x4) {\n  return _getUserFromCookie.apply(this, arguments);\n}\n\nfunction _getUserFromCookie() {\n  _getUserFromCookie = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req) {\n    var cookies, payload, user;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            cookies = new Cookies(req);\n            _context3.prev = 1;\n            _context3.next = 4;\n            return verify(cookies.get(\"_wsp\"));\n\n          case 4:\n            payload = _context3.sent;\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            return _context3.abrupt(\"return\", null);\n\n          case 10:\n            DatabaseService.connect();\n            _context3.next = 13;\n            return User.findOne({\n              _id: payload.id\n            }, {\n              name: -1\n            });\n\n          case 13:\n            user = _context3.sent;\n            return _context3.abrupt(\"return\", JSON.parse(JSON.stringify(user)));\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 7]]);\n  }));\n  return _getUserFromCookie.apply(this, arguments);\n}\n\nexport default {\n  createUser: createUser,\n  validatePassword: validatePassword,\n  sign: sign,\n  verify: verify,\n  getUserFromCookie: getUserFromCookie\n};","map":null,"metadata":{},"sourceType":"module"}