{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport fetch from \"isomorphic-unfetch\";\nimport Cookies from \"cookies\";\nimport DatabaseService from \"./database\";\nimport User from \"../models/User\";\n\nasync function createUser(pwd) {\n  const request = await fetch(\"https://paassword.now.sh/api/create\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      pwd\n    })\n  });\n\n  if (request.ok) {\n    const {\n      id\n    } = await request.json();\n    return id;\n  }\n}\n\nasync function validatePassword(passwordId, pwd) {\n  const request = await fetch(`https://paassword.now.sh/api/get/${passwordId}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      pwd\n    })\n  });\n\n  if (request.ok) {\n    const {\n      valid\n    } = await request.json();\n    return valid;\n  }\n} // Sign our JWT / encrypting\n\n\nfunction sign(payload) {\n  return new Promise((resolve, reject) => {\n    jwt.sign(payload, process.env.SECRET || \"secret\", {\n      expiresIn: \"1d\"\n    }, (err, token) => {\n      if (err) {\n        return reject(err);\n      }\n\n      resolve(token);\n    });\n  });\n} // Veriy\n\n\nfunction verify(token) {\n  return new Promise((resolve, reject) => {\n    jwt.verify(token, process.env.SECRET || \"secret\", (err, payload) => {\n      if (err) {\n        return reject(err);\n      }\n\n      resolve(payload);\n    });\n  });\n}\n\nasync function getUserFromCookie(req) {\n  const cookies = new Cookies(req);\n  let payload;\n\n  try {\n    payload = await verify(cookies.get(\"_wsp\"));\n  } catch (error) {\n    return null;\n  }\n\n  DatabaseService.connect();\n  const user = await User.findOne({\n    _id: payload.id\n  }, {\n    name: -1\n  });\n  return JSON.parse(JSON.stringify(user));\n}\n\nexport default {\n  createUser,\n  validatePassword,\n  sign,\n  verify,\n  getUserFromCookie\n};","map":null,"metadata":{},"sourceType":"module"}