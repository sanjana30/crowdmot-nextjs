{"ast":null,"code":"var _jsxFileName = \"/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/AnnotationList/AnnotationList.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup } from 'reactstrap';\nimport { Events, scrollSpy, scroller } from 'react-scroll';\nimport { initialIsDialogDisabledState, isDialogDisabledReducer } from './isDialogDisabledReducer';\nimport AnnotationItem from './AnnotationItem/AnnotationItem.jsx';\nimport TwoDimensionalVideoContext from '../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport { getSortedAnnotationsByLabel } from '../../utils/utils';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './annotationList.scss';\n\nconst AnnotationList = ({\n  className\n}) => {\n  const {\n    0: isDialogDisabled,\n    1: dispatchIsDialogDisabled\n  } = useReducer(isDialogDisabledReducer, initialIsDialogDisabledState);\n  const twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n  const {\n    entities,\n    focusing,\n    annotations,\n    height,\n    emptyAnnotationReminderText\n  } = twoDimensionalVideoContext;\n  useEffect(() => {\n    Events.scrollEvent.register('begin', () => {});\n    Events.scrollEvent.register('end', () => {});\n    scrollSpy.update();\n    return () => {\n      Events.scrollEvent.remove('begin');\n      Events.scrollEvent.remove('end');\n    };\n  }, []);\n  useEffect(() => {\n    if (focusing) {\n      scroller.scrollTo(focusing, {\n        containerId: 'annotation-list'\n      });\n    }\n  }, [focusing]);\n  const sortedAnnotations = getSortedAnnotationsByLabel(annotations, entities);\n  const itemsUI = sortedAnnotations.filter(ann => entities && entities.annotations[ann] && entities.annotations[ann].isManipulatable).map(ann => __jsx(AnnotationItem, {\n    key: ann,\n    itemData: entities.annotations[ann],\n    isDialogDisabled: isDialogDisabled,\n    dispatchIsDialogDisabled: dispatchIsDialogDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }));\n\n  if (itemsUI.length === 0) {\n    return __jsx(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        height: height - 60\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, emptyAnnotationReminderText);\n  }\n\n  const rootClassName = `annotation-list${className ? ` ${className}` : ''}`;\n  return __jsx(ListGroup, {\n    className: rootClassName,\n    id: \"annotation-list\",\n    style: {\n      maxHeight: height - 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, itemsUI);\n};\n\nAnnotationList.propTypes = {\n  className: PropTypes.string\n};\nAnnotationList.defaultProps = {\n  className: ''\n};\nexport default AnnotationList;","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/AnnotationList/AnnotationList.jsx"],"names":["React","useEffect","useReducer","useContext","PropTypes","ListGroup","Events","scrollSpy","scroller","initialIsDialogDisabledState","isDialogDisabledReducer","AnnotationItem","TwoDimensionalVideoContext","getSortedAnnotationsByLabel","AnnotationList","className","isDialogDisabled","dispatchIsDialogDisabled","twoDimensionalVideoContext","entities","focusing","annotations","height","emptyAnnotationReminderText","scrollEvent","register","update","remove","scrollTo","containerId","sortedAnnotations","itemsUI","filter","ann","isManipulatable","map","length","rootClassName","maxHeight","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup } from 'reactstrap';\nimport { Events, scrollSpy, scroller } from 'react-scroll';\nimport {\n\tinitialIsDialogDisabledState,\n\tisDialogDisabledReducer,\n} from './isDialogDisabledReducer';\nimport AnnotationItem from './AnnotationItem/AnnotationItem.jsx';\nimport TwoDimensionalVideoContext from '../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport { getSortedAnnotationsByLabel } from '../../utils/utils';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './annotationList.scss';\n\nconst AnnotationList = ({ className }) => {\n\tconst [isDialogDisabled, dispatchIsDialogDisabled] = useReducer(isDialogDisabledReducer, initialIsDialogDisabledState);\n\tconst twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n\tconst {\n\t\tentities,\n\t\tfocusing,\n\t\tannotations,\n\t\theight,\n\t\temptyAnnotationReminderText,\n\t} = twoDimensionalVideoContext;\n\n\tuseEffect(() => {\n\t\tEvents.scrollEvent.register('begin', () => {});\n\t\tEvents.scrollEvent.register('end', () => {});\n\t\tscrollSpy.update();\n\t\treturn () => {\n\t\t\tEvents.scrollEvent.remove('begin');\n\t\t\tEvents.scrollEvent.remove('end');\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (focusing) {\n\t\t\tscroller.scrollTo(focusing, { containerId: 'annotation-list' });\n\t\t}\n\t}, [focusing]);\n\n\tconst sortedAnnotations = getSortedAnnotationsByLabel(annotations, entities);\n\tconst itemsUI = sortedAnnotations\n\t\t.filter(ann => entities && entities.annotations[ann] && entities.annotations[ann].isManipulatable)\n\t\t.map(ann => (\n\t\t\t<AnnotationItem\n\t\t\t\tkey={ ann }\n\t\t\t\titemData={ entities.annotations[ann] }\n\t\t\t\tisDialogDisabled={ isDialogDisabled }\n\t\t\t\tdispatchIsDialogDisabled={ dispatchIsDialogDisabled }\n\t\t\t/>\n\t\t));\n\tif (itemsUI.length === 0) {\n\t\treturn (\n\t\t\t<div className='d-flex align-items-center justify-content-center' style={ { height: height - 60 } }>\n\t\t\t\t{emptyAnnotationReminderText}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst rootClassName = `annotation-list${className ? ` ${className}` : ''}`;\n\treturn (\n\t\t<ListGroup className={ rootClassName } id='annotation-list' style={ { maxHeight: height - 60 } }>{itemsUI}</ListGroup>\n\t);\n};\n\nAnnotationList.propTypes = {\n\tclassName: PropTypes.string,\n};\nAnnotationList.defaultProps = {\n\tclassName: '',\n};\nexport default AnnotationList;\n"]},"metadata":{},"sourceType":"module"}