{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport fetch from \"isomorphic-unfetch\";\nimport * as Yup from \"yup\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport Input from \"../components/Input\";\nimport Field from \"../components/Field\";\nimport Label from \"../components/Label\";\nimport Button from \"../components/Button\";\n\nvar SignupSchema = function SignupSchema(isSignUp) {\n  return Yup.object().shape({\n    name: isSignUp && Yup.string().min(2, \"too short\").required(\"required\"),\n    email: Yup.string().email(\"not valid\").required(\"required\"),\n    password: Yup.string().min(6, \"too short\").required(\"required\")\n  });\n};\n\nexport default (function (props) {\n  var _useState = useState(false),\n      isSignUp = _useState[0],\n      setIsSignUp = _useState[1];\n\n  var handleSubmit = function handleSubmit(values, context) {\n    var request, token, error;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(values);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"/api/authenticate\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(_objectSpread({}, values, {\n                isSignUp: isSignUp\n              }))\n            }));\n\n          case 3:\n            request = _context.sent;\n            context.setSubmitting(false);\n\n            if (!request.ok) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(request.text());\n\n          case 8:\n            token = _context.sent;\n            Cookie.set(\"_wsp\", token, {\n              secure: true,\n              sameSite: \"lax\"\n            });\n            true && Router.push(\"/\");\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(request.text());\n\n          case 15:\n            error = _context.sent;\n            context.setErrors({\n              general: error || \"There was a problem authenticating you with that email and password combination.\"\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-4037609192\" + \" \" + \"page\"\n  }, __jsx(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: SignupSchema(isSignUp),\n    onSubmit: handleSubmit\n  }, function (_ref) {\n    var errors = _ref.errors,\n        touched = _ref.touched,\n        values = _ref.values,\n        isSubmitting = _ref.isSubmitting,\n        isValid = _ref.isValid,\n        getFieldProps = _ref.getFieldProps;\n    return __jsx(Form, null, __jsx(\"div\", {\n      className: \"jsx-4037609192\" + \" \" + \"form\"\n    }, isSignUp && __jsx(Field, null, __jsx(Label, {\n      htmlFor: \"name\",\n      error: touched.name && errors.name\n    }, \"\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB Name\"), __jsx(Input, _extends({\n      name: \"name\",\n      id: \"name\",\n      type: \"text\"\n    }, getFieldProps(\"name\")))), __jsx(Field, null, __jsx(Label, {\n      htmlFor: \"email\",\n      error: touched.email && errors.email\n    }, \"\\u2709\\uFE0F Email\"), __jsx(Input, _extends({\n      type: \"email\",\n      id: \"email\",\n      name: \"email\"\n    }, getFieldProps(\"email\")))), __jsx(Field, null, __jsx(Label, {\n      htmlFor: \"password\",\n      error: touched.password && errors.password\n    }, \"\\uD83D\\uDD11 Password\"), __jsx(Input, _extends({\n      id: \"password\",\n      type: \"password\",\n      name: \"password\"\n    }, getFieldProps(\"password\")))), __jsx(Button, {\n      disabled: isSubmitting || !isValid,\n      loading: isSubmitting\n    }, isSignUp ? \"Sign up\" : \"Log in\"), __jsx(\"p\", {\n      className: \"jsx-4037609192\" + \" \" + \"error\"\n    }, errors === null || errors === void 0 ? void 0 : errors.general), \" \"));\n  }), __jsx(\"p\", {\n    className: \"jsx-4037609192\" + \" \" + \"log-in-prompt\"\n  }, isSignUp ? \"Have\" : \"Need\", \" an account?\", __jsx(\"span\", {\n    className: \"jsx-4037609192\" + \" \" + \"small\"\n  }, \"Click below, fill out the form, et vola!\")), __jsx(Button, {\n    onClick: function onClick() {\n      return setIsSignUp(!isSignUp);\n    }\n  }, isSignUp ? \"Log in\" : \"Sign up\")), __jsx(_JSXStyle, {\n    id: \"4037609192\"\n  }, [\".error.jsx-4037609192{text-align:center;color:var(--error);}\", \".page.jsx-4037609192{width:100%;min-height:100vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\", \".log-in-prompt.jsx-4037609192{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-top:0.25rem;}\", \".log-in-prompt.jsx-4037609192>.small.jsx-4037609192{font-size:0.75rem;opacity:0.6;}\", \".form.jsx-4037609192{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:300px;}\", \".form.jsx-4037609192>.field,.form.jsx-4037609192>.btn{margin-bottom:0.5rem;}\"]));\n});","map":null,"metadata":{},"sourceType":"module"}