{"ast":null,"code":"function _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar getAnnotationIdByLabel = function getAnnotationIdByLabel(label, annotations, entities) {\n  return annotations.find(function (ann) {\n    return entities.annotations[ann].label === label;\n  });\n};\n\nvar getSubAnnotations = function getSubAnnotations(i, annotations, entities) {\n  var result = [];\n  var queue = [];\n  var id = getAnnotationIdByLabel(\"\".concat(i), annotations, entities);\n\n  if (id) {\n    queue.push(id);\n    result.push(id);\n  }\n\n  while (queue.length > 0) {\n    var ann = queue.shift();\n\n    var _iterator = _createForOfIteratorHelper(entities.annotations[ann].childrenNames),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var c = _step.value;\n        result.push(c);\n        queue.push(c);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return result;\n};\n\nvar getSortedAnnotationsByLabel = function getSortedAnnotationsByLabel(annotations, entities) {\n  var sortedAnnotations = [];\n  var i = 1;\n\n  while (sortedAnnotations.length < annotations.length && i <= annotations.length) {\n    var subAnnotations = getSubAnnotations(i, annotations, entities);\n    sortedAnnotations = subAnnotations.concat(sortedAnnotations);\n    i += 1;\n  }\n\n  return sortedAnnotations;\n};\n\nvar getLastAnnotationLabel = function getLastAnnotationLabel(annotations, entities) {\n  var i = 0;\n\n  while (i < annotations.length) {\n    var id = getAnnotationIdByLabel(\"\".concat(i + 1), annotations, entities);\n    if (!id) return i;\n    i += 1;\n  }\n\n  return i;\n};\n\nvar getUniqueKey = function getUniqueKey() {\n  return new Date().getTime().toString(36);\n};\n\nexport { getSortedAnnotationsByLabel, getLastAnnotationLabel, getUniqueKey };","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/utils/utils.js"],"names":["getAnnotationIdByLabel","label","annotations","entities","find","ann","getSubAnnotations","i","result","queue","id","push","length","shift","childrenNames","c","getSortedAnnotationsByLabel","sortedAnnotations","subAnnotations","concat","getLastAnnotationLabel","getUniqueKey","Date","getTime","toString"],"mappings":";;;;;;AAAA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAQC,WAAR,EAAqBC,QAArB;AAAA,SAAmCD,WAAW,CAACE,IAAZ,CAAiB,UAAAC,GAAG;AAAA,WAAIF,QAAQ,CAACD,WAAT,CAAqBG,GAArB,EAA0BJ,KAA1B,KAAoCA,KAAxC;AAAA,GAApB,CAAnC;AAAA,CAA/B;;AAEA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAIL,WAAJ,EAAiBC,QAAjB,EAA8B;AACvD,MAAMK,MAAM,GAAG,EAAf;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,EAAE,GAAGV,sBAAsB,WAAIO,CAAJ,GAASL,WAAT,EAAsBC,QAAtB,CAAjC;;AACA,MAAIO,EAAJ,EAAQ;AACPD,IAAAA,KAAK,CAACE,IAAN,CAAWD,EAAX;AACAF,IAAAA,MAAM,CAACG,IAAP,CAAYD,EAAZ;AACA;;AACD,SAAOD,KAAK,CAACG,MAAN,GAAe,CAAtB,EAAyB;AACxB,QAAMP,GAAG,GAAGI,KAAK,CAACI,KAAN,EAAZ;;AADwB,+CAERV,QAAQ,CAACD,WAAT,CAAqBG,GAArB,EAA0BS,aAFlB;AAAA;;AAAA;AAExB,0DAAyD;AAAA,YAA9CC,CAA8C;AACxDP,QAAAA,MAAM,CAACG,IAAP,CAAYI,CAAZ;AACAN,QAAAA,KAAK,CAACE,IAAN,CAAWI,CAAX;AACA;AALuB;AAAA;AAAA;AAAA;AAAA;AAMxB;;AACD,SAAOP,MAAP;AACA,CAhBD;;AAkBA,IAAMQ,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACd,WAAD,EAAcC,QAAd,EAA2B;AAC9D,MAAIc,iBAAiB,GAAG,EAAxB;AACA,MAAIV,CAAC,GAAG,CAAR;;AACA,SAAOU,iBAAiB,CAACL,MAAlB,GAA2BV,WAAW,CAACU,MAAvC,IAAiDL,CAAC,IAAIL,WAAW,CAACU,MAAzE,EAAiF;AAChF,QAAMM,cAAc,GAAGZ,iBAAiB,CAACC,CAAD,EAAIL,WAAJ,EAAiBC,QAAjB,CAAxC;AACAc,IAAAA,iBAAiB,GAAGC,cAAc,CAACC,MAAf,CAAsBF,iBAAtB,CAApB;AACAV,IAAAA,CAAC,IAAI,CAAL;AACA;;AACD,SAAOU,iBAAP;AACA,CATD;;AAWA,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAClB,WAAD,EAAcC,QAAd,EAA2B;AACzD,MAAII,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGL,WAAW,CAACU,MAAvB,EAA+B;AAC9B,QAAMF,EAAE,GAAGV,sBAAsB,WAAIO,CAAC,GAAG,CAAR,GAAaL,WAAb,EAA0BC,QAA1B,CAAjC;AACA,QAAI,CAACO,EAAL,EAAS,OAAOH,CAAP;AACTA,IAAAA,CAAC,IAAI,CAAL;AACA;;AACD,SAAOA,CAAP;AACA,CARD;;AAUA,IAAMc,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,CAA8B,EAA9B,CAAN;AAAA,CAArB;;AAEA,SACCR,2BADD,EAECI,sBAFD,EAGCC,YAHD","sourcesContent":["const getAnnotationIdByLabel = (label, annotations, entities) => (annotations.find(ann => entities.annotations[ann].label === label));\n\nconst getSubAnnotations = (i, annotations, entities) => {\n\tconst result = [];\n\tconst queue = [];\n\tconst id = getAnnotationIdByLabel(`${i}`, annotations, entities);\n\tif (id) {\n\t\tqueue.push(id);\n\t\tresult.push(id);\n\t}\n\twhile (queue.length > 0) {\n\t\tconst ann = queue.shift();\n\t\tfor (const c of entities.annotations[ann].childrenNames) {\n\t\t\tresult.push(c);\n\t\t\tqueue.push(c);\n\t\t}\n\t}\n\treturn result;\n};\n\nconst getSortedAnnotationsByLabel = (annotations, entities) => {\n\tlet sortedAnnotations = [];\n\tlet i = 1;\n\twhile (sortedAnnotations.length < annotations.length && i <= annotations.length) {\n\t\tconst subAnnotations = getSubAnnotations(i, annotations, entities);\n\t\tsortedAnnotations = subAnnotations.concat(sortedAnnotations);\n\t\ti += 1;\n\t}\n\treturn sortedAnnotations;\n};\n\nconst getLastAnnotationLabel = (annotations, entities) => {\n\tlet i = 0;\n\twhile (i < annotations.length) {\n\t\tconst id = getAnnotationIdByLabel(`${i + 1}`, annotations, entities);\n\t\tif (!id) return i;\n\t\ti += 1;\n\t}\n\treturn i;\n};\n\nconst getUniqueKey = () => new Date().getTime().toString(36);\n\nexport {\n\tgetSortedAnnotationsByLabel,\n\tgetLastAnnotationLabel,\n\tgetUniqueKey,\n};\n"]},"metadata":{},"sourceType":"module"}