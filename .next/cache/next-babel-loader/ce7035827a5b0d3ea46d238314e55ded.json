{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MdPlayArrow, MdPause, MdReplay } from 'react-icons/md';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, ButtonGroup } from 'reactstrap';\nimport Slider from '../Slider/Slider.jsx';\nimport FormattedTime from '../FormattedTime/FormattedTime.jsx';\nimport './control.scss';\n\nvar Control = function Control(_ref) {\n  var className = _ref.className,\n      isPlaying = _ref.isPlaying,\n      played = _ref.played,\n      playbackRate = _ref.playbackRate,\n      duration = _ref.duration,\n      onSliderMouseUp = _ref.onSliderMouseUp,\n      onSliderMouseDown = _ref.onSliderMouseDown,\n      onSliderChange = _ref.onSliderChange,\n      onRewind = _ref.onRewind,\n      onPlayPause = _ref.onPlayPause,\n      onSpeedChange = _ref.onSpeedChange;\n\n  var _useState = useState(false),\n      isDropdownOpen = _useState[0],\n      setIsDropdownOpen = _useState[1];\n\n  var _useTranslation = useTranslation('twoDimensionalVideo'),\n      t = _useTranslation.t;\n\n  return __jsx(\"div\", {\n    className: \"player-control\".concat(className ? \" \".concat(className) : '')\n  }, __jsx(Slider, {\n    played: played,\n    onMouseUp: onSliderMouseUp,\n    onMouseDown: onSliderMouseDown,\n    onChange: onSliderChange\n  }), __jsx(\"div\", {\n    className: \"d-flex mt-2\"\n  }, __jsx(\"div\", {\n    className: \"mr-auto d-flex align-items-center\"\n  }, __jsx(ButtonGroup, null, __jsx(Button, {\n    className: \"player-control__button d-flex align-items-center\",\n    color: \"link\",\n    onClick: onRewind\n  }, __jsx(MdReplay, {\n    className: \"player-control__icon\"\n  })), __jsx(Button, {\n    className: \"player-control__button d-flex align-items-center\",\n    color: \"link\",\n    onClick: onPlayPause\n  }, isPlaying ? __jsx(MdPause, {\n    className: \"player-control__icon\"\n  }) : __jsx(MdPlayArrow, {\n    className: \"player-control__icon\"\n  }))), __jsx(Dropdown, {\n    isOpen: isDropdownOpen,\n    toggle: function toggle() {\n      return setIsDropdownOpen(!isDropdownOpen);\n    },\n    size: \"sm\"\n  }, __jsx(DropdownToggle, {\n    className: \"player-control__speed-toggle d-flex align-items-center\",\n    color: \"link\",\n    caret: true\n  }, 'x', playbackRate), __jsx(DropdownMenu, null, __jsx(DropdownItem, {\n    header: true\n  }, t('playerControlSpeed')), __jsx(DropdownItem, {\n    className: \"player-control__speed-item\",\n    onClick: function onClick() {\n      return onSpeedChange(0.25);\n    }\n  }, \"0.25\"), __jsx(DropdownItem, {\n    className: \"player-control__speed-item\",\n    onClick: function onClick() {\n      return onSpeedChange(0.5);\n    }\n  }, \"0.5\"), __jsx(DropdownItem, {\n    className: \"player-control__speed-item\",\n    onClick: function onClick() {\n      return onSpeedChange(1);\n    }\n  }, \"1\"), __jsx(DropdownItem, {\n    className: \"player-control__speed-item\",\n    onClick: function onClick() {\n      return onSpeedChange(1.5);\n    }\n  }, \"1.5\"), __jsx(DropdownItem, {\n    className: \"player-control__speed-item\",\n    onClick: function onClick() {\n      return onSpeedChange(2);\n    }\n  }, \"2\")))), __jsx(\"div\", {\n    className: \"d-flex align-items-center\"\n  }, __jsx(\"div\", {\n    className: \"player-control__time\"\n  }, __jsx(FormattedTime, {\n    seconds: played * duration\n  }), ' / ', __jsx(FormattedTime, {\n    seconds: duration\n  })))));\n};\n\nControl.defaultProps = {\n  className: '',\n  isPlaying: false,\n  played: 0,\n  playbackRate: 1,\n  duration: 0,\n  onSliderMouseUp: function onSliderMouseUp() {},\n  onSliderMouseDown: function onSliderMouseDown() {},\n  onSliderChange: function onSliderChange() {},\n  onRewind: function onRewind() {},\n  onPlayPause: function onPlayPause() {},\n  onSpeedChange: function onSpeedChange() {}\n};\nexport default Control;","map":null,"metadata":{},"sourceType":"module"}