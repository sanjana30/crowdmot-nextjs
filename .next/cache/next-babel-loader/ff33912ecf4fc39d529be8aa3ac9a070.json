{"ast":null,"code":"var _jsxFileName = \"/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/AnnotationList/AnnotationItem/AnnotationItem.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Collapse, Badge, ListGroupItem } from 'reactstrap';\nimport { MdCallSplit, MdDelete } from 'react-icons/md';\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\nimport { IoMdEyeOff, IoMdEye } from 'react-icons/io';\nimport { SPLIT, HIDE, SHOW } from 'models/2DVideo';\nimport IncidentList from '../../IncidentList/IncidentList.jsx';\nimport TwoDimensionalVideoContext from '../../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport OpenDialogButton from '../../OpenDialogButton/OpenDialogButton.jsx';\nimport { isDialogDisabledConst } from '../isDialogDisabledReducer';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './annotationItem.scss';\n\nconst AnnotationItem = ({\n  className,\n  itemData,\n  isDialogDisabled,\n  dispatchIsDialogDisabled\n}) => {\n  const twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n  const {\n    played,\n    entities,\n    focusing,\n    isEmptyCheckEnable,\n    isSplitEnable,\n    isShowHideEnable,\n    emptyCheckAnnotationItemWarningText,\n    onAnnotationItemClick,\n    onAnnotationDeleteClick,\n    onAnnotationShowHideClick,\n    onAnnotationSplitClick\n  } = twoDimensionalVideoContext;\n  const {\n    0: isIncidentListOpen,\n    1: setIsIncidentListOpen\n  } = useState(false);\n  const {\n    t\n  } = useTranslation('twoDimensionalVideo');\n  const {\n    incidents,\n    name,\n    label,\n    color,\n    parentName,\n    childrenNames\n  } = itemData;\n  const parentAnnotation = entities.annotations[parentName];\n  const childrenUI = childrenNames.map(c => __jsx(Button, {\n    color: \"link\",\n    key: c,\n    onClick: () => onAnnotationItemClick(c),\n    className: \"video-ann-relatives\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, `${entities.annotations[c].label} `));\n\n  let showButtonUI = __jsx(OpenDialogButton, {\n    className: \"d-flex align-items-center annotation-item__control-button\",\n    outline: true,\n    title: t('dialogTitleShow'),\n    message: t('dialogMessageShow'),\n    isDialogDisabled: isDialogDisabled.show,\n    onYesClick: () => onAnnotationShowHideClick({\n      name,\n      status: SHOW\n    }),\n    onDontShowAgainChange: e => dispatchIsDialogDisabled({\n      type: isDialogDisabledConst.SHOW,\n      value: e.target.checked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, __jsx(IoMdEye, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }), SHOW);\n\n  let hideButtonUI = __jsx(OpenDialogButton, {\n    className: \"d-flex align-items-center annotation-item__control-button\",\n    outline: true,\n    title: t('dialogTitleHide'),\n    message: t('dialogMessageHide'),\n    isDialogDisabled: isDialogDisabled.hide,\n    onYesClick: () => onAnnotationShowHideClick({\n      name,\n      status: HIDE\n    }),\n    onDontShowAgainChange: e => dispatchIsDialogDisabled({\n      type: isDialogDisabledConst.HIDE,\n      value: e.target.checked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, __jsx(IoMdEyeOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }), HIDE);\n\n  let splitButtonUI = __jsx(OpenDialogButton, {\n    className: \"d-flex align-items-center annotation-item__control-button\",\n    outline: true,\n    title: t('dialogTitleSplit'),\n    message: t('dialogMessageSplit'),\n    isDialogDisabled: isDialogDisabled.split,\n    onYesClick: () => onAnnotationSplitClick(name),\n    onDontShowAgainChange: e => dispatchIsDialogDisabled({\n      type: isDialogDisabledConst.HIDE,\n      value: e.target.checked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }, __jsx(MdCallSplit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }), SPLIT);\n\n  const currentIncident = [...incidents].reverse().find(incident => played >= incident.time) || {};\n\n  switch (currentIncident.status) {\n    case SHOW:\n      showButtonUI = null;\n      break;\n\n    case HIDE:\n      hideButtonUI = null;\n      splitButtonUI = null;\n      break;\n\n    case SPLIT:\n      showButtonUI = null;\n      hideButtonUI = null;\n      break;\n\n    default:\n      showButtonUI = null;\n      hideButtonUI = null;\n      splitButtonUI = null;\n      break;\n  }\n\n  const warningText = isEmptyCheckEnable && incidents.length < 2 && __jsx(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 68\n    }\n  }, emptyCheckAnnotationItemWarningText);\n\n  let rootClassName = `annotation-item${className ? ` ${className}` : ''}`;\n\n  if (name !== focusing) {\n    return __jsx(ListGroupItem, {\n      className: rootClassName,\n      name: name,\n      onClick: () => onAnnotationItemClick(name),\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 4\n      }\n    }, __jsx(\"div\", {\n      className: \"d-flex w-100 justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }\n    }, label)), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }, warningText));\n  }\n\n  rootClassName = `${rootClassName} annotation-item--highlight`;\n  return __jsx(ListGroupItem, {\n    className: rootClassName,\n    name: name,\n    style: {\n      borderColor: color.replace(/,1\\)/, ',.3)')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 30\n    }\n  }, label)), isSplitEnable && splitButtonUI, isShowHideEnable && hideButtonUI, showButtonUI, __jsx(OpenDialogButton, {\n    className: \"d-flex align-items-center annotation-item__delete-button\",\n    color: \"link\",\n    title: t('dialogTitleDelete'),\n    message: t('dialogMessageDelete'),\n    isDialogDisabled: isDialogDisabled.delete,\n    onYesClick: () => onAnnotationDeleteClick(name),\n    onDontShowAgainChange: e => dispatchIsDialogDisabled({\n      type: isDialogDisabledConst.DELETE,\n      value: e.target.checked\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, __jsx(MdDelete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 6\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }\n  }, parentAnnotation && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 6\n    }\n  }, __jsx(Badge, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, t('annotationItemParent')), __jsx(Button, {\n    color: \"link\",\n    onClick: () => onAnnotationItemClick(parentAnnotation.name),\n    className: \"annotation-item__parent-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, parentAnnotation.label))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }\n  }, childrenUI.length > 0 && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }\n  }, __jsx(Badge, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, t('annotationItemChildren')), childrenUI)), __jsx(Button, {\n    color: \"link\",\n    className: \"d-flex align-items-center justify-content-between incident-list-toggle-button p-3 mt-2\",\n    onClick: () => setIsIncidentListOpen(!isIncidentListOpen),\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, t('annotationItemIncidentHistory')), isIncidentListOpen ? __jsx(FaChevronUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 27\n    }\n  }) : __jsx(FaChevronDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 45\n    }\n  })), __jsx(Collapse, {\n    isOpen: isIncidentListOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 4\n    }\n  }, __jsx(IncidentList, {\n    incidents: incidents,\n    annotationName: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }\n  }, warningText));\n};\n\nAnnotationItem.propTypes = {\n  className: PropTypes.string,\n  itemData: PropTypes.object,\n  dispatchIsDialogDisabled: PropTypes.func,\n  isDialogDisabled: PropTypes.object\n};\nAnnotationItem.defaultProps = {\n  className: '',\n  itemData: {},\n  dispatchIsDialogDisabled: () => {},\n  isDialogDisabled: {}\n};\nexport default AnnotationItem;","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/AnnotationList/AnnotationItem/AnnotationItem.jsx"],"names":["React","useState","useContext","PropTypes","useTranslation","Button","Collapse","Badge","ListGroupItem","MdCallSplit","MdDelete","FaChevronDown","FaChevronUp","IoMdEyeOff","IoMdEye","SPLIT","HIDE","SHOW","IncidentList","TwoDimensionalVideoContext","OpenDialogButton","isDialogDisabledConst","AnnotationItem","className","itemData","isDialogDisabled","dispatchIsDialogDisabled","twoDimensionalVideoContext","played","entities","focusing","isEmptyCheckEnable","isSplitEnable","isShowHideEnable","emptyCheckAnnotationItemWarningText","onAnnotationItemClick","onAnnotationDeleteClick","onAnnotationShowHideClick","onAnnotationSplitClick","isIncidentListOpen","setIsIncidentListOpen","t","incidents","name","label","color","parentName","childrenNames","parentAnnotation","annotations","childrenUI","map","c","showButtonUI","show","status","e","type","value","target","checked","hideButtonUI","hide","splitButtonUI","split","currentIncident","reverse","find","incident","time","warningText","length","rootClassName","borderColor","replace","delete","DELETE","marginBottom","propTypes","string","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n\tButton, Collapse, Badge, ListGroupItem,\n} from 'reactstrap';\nimport { MdCallSplit, MdDelete } from 'react-icons/md';\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\nimport { IoMdEyeOff, IoMdEye } from 'react-icons/io';\nimport { SPLIT, HIDE, SHOW } from 'models/2DVideo';\nimport IncidentList from '../../IncidentList/IncidentList.jsx';\nimport TwoDimensionalVideoContext from '../../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport OpenDialogButton from '../../OpenDialogButton/OpenDialogButton.jsx';\nimport { isDialogDisabledConst } from '../isDialogDisabledReducer';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './annotationItem.scss';\n\nconst AnnotationItem = ({\n\tclassName,\n\titemData,\n\tisDialogDisabled,\n\tdispatchIsDialogDisabled,\n}) => {\n\tconst twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n\tconst {\n\t\tplayed,\n\t\tentities,\n\t\tfocusing,\n\t\tisEmptyCheckEnable,\n\t\tisSplitEnable,\n\t\tisShowHideEnable,\n\t\temptyCheckAnnotationItemWarningText,\n\t\tonAnnotationItemClick,\n\t\tonAnnotationDeleteClick,\n\t\tonAnnotationShowHideClick,\n\t\tonAnnotationSplitClick,\n\t} = twoDimensionalVideoContext;\n\tconst [isIncidentListOpen, setIsIncidentListOpen] = useState(false);\n\tconst { t } = useTranslation('twoDimensionalVideo');\n\n\tconst {\n\t\tincidents,\n\t\tname,\n\t\tlabel,\n\t\tcolor,\n\t\tparentName,\n\t\tchildrenNames,\n\t} = itemData;\n\tconst parentAnnotation = entities.annotations[parentName];\n\tconst childrenUI = childrenNames.map(c => (\n\t\t<Button color='link' key={ c } onClick={ () => onAnnotationItemClick(c) } className='video-ann-relatives'>\n\t\t\t{`${entities.annotations[c].label} `}\n\t\t\n\t\t</Button>\n\t));\n\tlet showButtonUI = (\n\t\t<OpenDialogButton\n\t\t\tclassName='d-flex align-items-center annotation-item__control-button'\n\t\t\toutline\n\t\t\ttitle={ t('dialogTitleShow') }\n\t\t\tmessage={ t('dialogMessageShow') }\n\t\t\tisDialogDisabled={ isDialogDisabled.show }\n\t\t\tonYesClick={ () => onAnnotationShowHideClick({ name, status: SHOW }) }\n\t\t\tonDontShowAgainChange={ e => dispatchIsDialogDisabled({ type: isDialogDisabledConst.SHOW, value: e.target.checked }) }\n\t\t>\n\t\t\t<IoMdEye />\n\t\t\t{SHOW}\n\n\t\t</OpenDialogButton>\n\t);\n\tlet hideButtonUI = (\n\t\t<OpenDialogButton\n\t\t\tclassName='d-flex align-items-center annotation-item__control-button'\n\t\t\toutline\n\t\t\ttitle={ t('dialogTitleHide') }\n\t\t\tmessage={ t('dialogMessageHide') }\n\t\t\tisDialogDisabled={ isDialogDisabled.hide }\n\t\t\tonYesClick={ () => onAnnotationShowHideClick({ name, status: HIDE }) }\n\t\t\tonDontShowAgainChange={ e => dispatchIsDialogDisabled({ type: isDialogDisabledConst.HIDE, value: e.target.checked }) }\n\t\t>\n\t\t\t<IoMdEyeOff />\n\t\t\t{HIDE}\n\t\t</OpenDialogButton>\n\t);\n\tlet splitButtonUI = (\n\t\t<OpenDialogButton\n\t\t\tclassName='d-flex align-items-center annotation-item__control-button'\n\t\t\toutline\n\t\t\ttitle={ t('dialogTitleSplit') }\n\t\t\tmessage={ t('dialogMessageSplit') }\n\t\t\tisDialogDisabled={ isDialogDisabled.split }\n\t\t\tonYesClick={ () => onAnnotationSplitClick(name) }\n\t\t\tonDontShowAgainChange={ e => dispatchIsDialogDisabled({ type: isDialogDisabledConst.HIDE, value: e.target.checked }) }\n\t\t>\n\t\t\t<MdCallSplit />\n\t\t\t{SPLIT}\n\t\t</OpenDialogButton>\n\t);\n\tconst currentIncident = [...incidents].reverse().find(incident => played >= incident.time) || {};\n\n\tswitch (currentIncident.status) {\n\tcase SHOW:\n\t\tshowButtonUI = null;\n\t\tbreak;\n\tcase HIDE:\n\t\thideButtonUI = null;\n\t\tsplitButtonUI = null;\n\t\tbreak;\n\tcase SPLIT:\n\t\tshowButtonUI = null;\n\t\thideButtonUI = null;\n\t\tbreak;\n\tdefault:\n\t\tshowButtonUI = null;\n\t\thideButtonUI = null;\n\t\tsplitButtonUI = null;\n\t\tbreak;\n\t}\n\n\tconst warningText = isEmptyCheckEnable && incidents.length < 2 && <span className='text-danger'>{emptyCheckAnnotationItemWarningText}</span>;\n\tlet rootClassName = `annotation-item${className ? ` ${className}` : ''}`;\n\tif (name !== focusing) {\n\t\treturn (\n\t\t\t<ListGroupItem\n\t\t\t\tclassName={ rootClassName }\n\t\t\t\tname={ name }\n\t\t\t\tonClick={ () => onAnnotationItemClick(name) }\n\t\t\t\taction\n\t\t\t>\n\t\t\t\t<div className='d-flex w-100 justify-content-between align-items-center'>\n\t\t\t\t\t<div>{label}</div>\n\t\t\t\t</div>\n\t\t\t\t<div>{warningText}</div>\n\t\t\t</ListGroupItem>\n\t\t);\n\t}\n\n\trootClassName = `${rootClassName} annotation-item--highlight`;\n\treturn (\n\t\t<ListGroupItem\n\t\t\tclassName={ rootClassName }\n\t\t\tname={ name }\n\t\t\tstyle={ { borderColor: color.replace(/,1\\)/, ',.3)') } }\n\t\t>\n\t\t\t<div className='d-flex align-items-center mb-2'>\n\t\t\t\t<div className='mr-auto'><strong>{label}</strong></div>\n\t\t\t\t{isSplitEnable && splitButtonUI}\n\t\t\t\t{isShowHideEnable && hideButtonUI}\n\t\t\t\t{showButtonUI}\n\t\t\t\t<OpenDialogButton\n\t\t\t\t\tclassName='d-flex align-items-center annotation-item__delete-button'\n\t\t\t\t\tcolor='link'\n\t\t\t\t\ttitle={ t('dialogTitleDelete') }\n\t\t\t\t\tmessage={ t('dialogMessageDelete') }\n\t\t\t\t\tisDialogDisabled={ isDialogDisabled.delete }\n\t\t\t\t\tonYesClick={ () => onAnnotationDeleteClick(name) }\n\t\t\t\t\tonDontShowAgainChange={ e => dispatchIsDialogDisabled({ type: isDialogDisabledConst.DELETE, value: e.target.checked }) }\n\t\t\t\t>\n\t\t\t\t\t<MdDelete />\n\t\t\t\t</OpenDialogButton>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{parentAnnotation && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Badge color='secondary'>{ t('annotationItemParent') }</Badge>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor='link'\n\t\t\t\t\t\t\tonClick={ () => onAnnotationItemClick(parentAnnotation.name) }\n\t\t\t\t\t\t\tclassName='annotation-item__parent-button'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{parentAnnotation.label}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{childrenUI.length > 0 && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Badge color='secondary'>{ t('annotationItemChildren') }</Badge>\n\t\t\t\t\t\t{childrenUI}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Button\n\t\t\t\tcolor='link'\n\t\t\t\tclassName='d-flex align-items-center justify-content-between incident-list-toggle-button p-3 mt-2'\n\t\t\t\tonClick={ () => setIsIncidentListOpen(!isIncidentListOpen) }\n\t\t\t\tstyle={ { marginBottom: 0 } }\n\t\t\t>\n\t\t\t\t<div>{ t('annotationItemIncidentHistory') }</div>\n\t\t\t\t{isIncidentListOpen ? <FaChevronUp /> : <FaChevronDown />}\n\t\t\t</Button>\n\t\t\t<Collapse isOpen={ isIncidentListOpen }>\n\t\t\t\t<IncidentList incidents={ incidents } annotationName={ name } />\n\t\t\t</Collapse>\n\t\t\t<div className='mt-3'>\n\t\t\t\t{warningText}\n\t\t\t</div>\n\t\t</ListGroupItem>\n\t);\n};\n\nAnnotationItem.propTypes = {\n\tclassName: PropTypes.string,\n    itemData: PropTypes.object,\n\tdispatchIsDialogDisabled: PropTypes.func,\n\tisDialogDisabled: PropTypes.object,\n};\nAnnotationItem.defaultProps = {\n\tclassName: '',\n\titemData: {},\n\tdispatchIsDialogDisabled: () => {},\n\tisDialogDisabled: {},\n};\nexport default AnnotationItem;\n"]},"metadata":{},"sourceType":"module"}