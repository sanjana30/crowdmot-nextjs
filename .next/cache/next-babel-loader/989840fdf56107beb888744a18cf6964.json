{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { MdDelete } from 'react-icons/md';\nimport { FaArrowDown } from 'react-icons/fa';\nimport RoundedNumber from 'shared/components/Math/RoundedNumber/RoundedNumber.jsx';\nimport TwoDimensionalVideoContext from '../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport Duration from '../VideoPlayer/FormattedTime/FormattedTime.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './incidentList.scss';\n\nvar IncidentList = function IncidentList(_ref) {\n  var className = _ref.className,\n      annotationName = _ref.annotationName,\n      incidents = _ref.incidents;\n\n  var _useTranslation = useTranslation('twoDimensionalVideo'),\n      t = _useTranslation.t;\n\n  var twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n  var played = twoDimensionalVideoContext.played,\n      duration = twoDimensionalVideoContext.duration,\n      onIncidentItemClick = twoDimensionalVideoContext.onIncidentItemClick,\n      onIncidentItemDeleteClick = twoDimensionalVideoContext.onIncidentItemDeleteClick;\n  var incidentListUI = incidents.map(function (incident, index) {\n    var name = incident.name,\n        time = incident.time,\n        width = incident.width,\n        height = incident.height,\n        status = incident.status,\n        x = incident.x,\n        y = incident.y;\n    var itemButtonStyle = {};\n\n    if (time === played) {\n      itemButtonStyle.color = 'rgb(33, 37, 41)';\n    }\n\n    var isNotLastIncidentAndPlayedBetweenCurrentAndNext = index !== incidents.length - 1 && played > time && played < incidents[index + 1].time;\n    var isLastIncidentAndPlayedOverCurrent = index === incidents.length - 1 && played > time;\n    var arrowDown = isNotLastIncidentAndPlayedBetweenCurrentAndNext || isLastIncidentAndPlayedOverCurrent ? __jsx(ListGroupItem, {\n      key: time + 1,\n      className: \"incident-list__item\"\n    }, __jsx(FaArrowDown, {\n      style: {\n        color: '',\n        fontSize: '1em'\n      }\n    })) : null;\n    return __jsx(Fragment, {\n      key: time\n    }, __jsx(ListGroupItem, {\n      key: time,\n      className: \"incident-list__item d-flex align-items-center justify-content-between\"\n    }, __jsx(Button, {\n      color: \"link\",\n      className: \"incident-list__item-button d-flex justify-content-between\",\n      style: itemButtonStyle,\n      onClick: function onClick() {\n        return onIncidentItemClick({\n          time: time,\n          annotationName: annotationName\n        });\n      }\n    }, __jsx(\"div\", {\n      className: \"incident-list__item-status pr-1\"\n    }, __jsx(\"b\", null, status), ' ', __jsx(Duration, {\n      className: \"incident-list__item-duration\",\n      seconds: duration * time\n    })), __jsx(\"div\", {\n      className: \"incident-list__item-size pr-1\"\n    }, __jsx(\"b\", null, t('incidentSize')), ' ', __jsx(RoundedNumber, {\n      number: width\n    }), 'x', __jsx(RoundedNumber, {\n      number: height\n    })), __jsx(\"div\", {\n      className: \"incident-list__item-position\"\n    }, __jsx(\"b\", null, t('incidentPosition')), ' ', __jsx(RoundedNumber, {\n      number: x\n    }), ':', __jsx(RoundedNumber, {\n      number: y\n    }))), __jsx(Button, {\n      className: \"incident-list__item-delete-button\",\n      color: \"link\",\n      onClick: function onClick() {\n        return onIncidentItemDeleteClick({\n          annotationName: annotationName,\n          incidentName: name\n        });\n      }\n    }, __jsx(MdDelete, null))), arrowDown);\n  });\n  var rootClassName = \"incident-list px-3 py-2 text-center\".concat(className ? \" \".concat(className) : '');\n  return __jsx(ListGroup, {\n    className: rootClassName\n  }, incidentListUI);\n};\n\nIncidentList.defaultProps = {\n  className: '',\n  annotationName: '',\n  incidents: []\n};\nexport default IncidentList;","map":null,"metadata":{},"sourceType":"module"}