{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport TwoDimensionalVideoContext from '../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport VideoPlayerScreen from '../VideoPlayer/Screen/Screen.jsx';\nimport VideoPlayerControl from '../VideoPlayer/Control/Control.jsx';\nimport Canvas from '../Canvas/Canvas.jsx';\nimport './drawableVideoPlayer.scss';\n\nvar DrawableVideoPlayer = function DrawableVideoPlayer(_ref) {\n  var className = _ref.className;\n  var twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n  var url = twoDimensionalVideoContext.url,\n      played = twoDimensionalVideoContext.played,\n      isPlaying = twoDimensionalVideoContext.isPlaying,\n      playbackRate = twoDimensionalVideoContext.playbackRate,\n      isLoop = twoDimensionalVideoContext.isLoop,\n      entities = twoDimensionalVideoContext.entities,\n      annotations = twoDimensionalVideoContext.annotations,\n      focusing = twoDimensionalVideoContext.focusing,\n      width = twoDimensionalVideoContext.width,\n      height = twoDimensionalVideoContext.height,\n      duration = twoDimensionalVideoContext.duration,\n      isAdding = twoDimensionalVideoContext.isAdding,\n      isEmptyCheckEnable = twoDimensionalVideoContext.isEmptyCheckEnable,\n      playerRef = twoDimensionalVideoContext.playerRef,\n      onVideoReady = twoDimensionalVideoContext.onVideoReady,\n      onVideoProgress = twoDimensionalVideoContext.onVideoProgress,\n      onVideoDuration = twoDimensionalVideoContext.onVideoDuration,\n      onVideoEnded = twoDimensionalVideoContext.onVideoEnded,\n      onVideoSliderMouseUp = twoDimensionalVideoContext.onVideoSliderMouseUp,\n      onVideoSliderMouseDown = twoDimensionalVideoContext.onVideoSliderMouseDown,\n      onVideoSliderChange = twoDimensionalVideoContext.onVideoSliderChange,\n      onVideoRewind = twoDimensionalVideoContext.onVideoRewind,\n      onVideoPlayPause = twoDimensionalVideoContext.onVideoPlayPause,\n      onVideoSpeedChange = twoDimensionalVideoContext.onVideoSpeedChange,\n      onCanvasStageMouseDown = twoDimensionalVideoContext.onCanvasStageMouseDown,\n      onCanvasGroupMouseDown = twoDimensionalVideoContext.onCanvasGroupMouseDown,\n      onCanvasGroupDragEnd = twoDimensionalVideoContext.onCanvasGroupDragEnd,\n      onCanvasDotMouseDown = twoDimensionalVideoContext.onCanvasDotMouseDown,\n      onCanvasDotDragEnd = twoDimensionalVideoContext.onCanvasDotDragEnd;\n  var rootClassName = \"drawable-video-player\".concat(className ? \" \".concat(className) : '');\n  return __jsx(\"div\", {\n    className: rootClassName\n  }, __jsx(\"div\", {\n    className: \"drawable-video-player__player-canvas-wrapper\"\n  }, __jsx(VideoPlayerScreen, {\n    playerRef: playerRef,\n    onReady: onVideoReady,\n    onProgress: onVideoProgress,\n    onDuration: onVideoDuration,\n    onEnded: onVideoEnded,\n    url: url,\n    width: width,\n    isPlaying: isPlaying,\n    isLoop: isLoop,\n    playbackRate: playbackRate\n  }), __jsx(Canvas, {\n    width: width,\n    height: height,\n    played: played,\n    focusing: focusing,\n    isAdding: isAdding,\n    entities: entities,\n    annotations: annotations,\n    onStageMouseDown: onCanvasStageMouseDown,\n    onGroupMouseDown: onCanvasGroupMouseDown,\n    onGroupDragEnd: onCanvasGroupDragEnd,\n    onDotMouseDown: onCanvasDotMouseDown,\n    onDotDragEnd: onCanvasDotDragEnd,\n    isEmptyCheckEnable: isEmptyCheckEnable\n  })), __jsx(VideoPlayerControl, {\n    isPlaying: isPlaying,\n    played: played,\n    playbackRate: playbackRate,\n    duration: duration,\n    onSliderMouseUp: onVideoSliderMouseUp,\n    onSliderMouseDown: onVideoSliderMouseDown,\n    onSliderChange: onVideoSliderChange,\n    onRewind: onVideoRewind,\n    onPlayPause: onVideoPlayPause,\n    onSpeedChange: onVideoSpeedChange\n  }));\n};\n\nDrawableVideoPlayer.defaultProps = {\n  className: ''\n};\nexport default DrawableVideoPlayer;","map":null,"metadata":{},"sourceType":"module"}