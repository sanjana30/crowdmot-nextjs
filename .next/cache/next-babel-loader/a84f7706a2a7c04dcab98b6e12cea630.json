{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from \"isomorphic-unfetch\";\nimport useSWR from \"swr\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nexport default function useAuth(initialData) {\n  const {\n    data: user\n  } = useSWR(\"/api/user\", async route => {\n    const authRequest = await fetch(route, {\n      header: {\n        authorization: Cookie.get(\"_wsp\")\n      }\n    });\n\n    if (authRequest.ok) {\n      return authRequest.json();\n    } else {\n      Cookie.remove(\"_wsp\");\n    }\n  }, {\n    initialData\n  });\n  return _objectSpread(_objectSpread({}, user), {}, {\n    logout() {\n      Cookie.remove(\"_wsp\");\n    }\n\n  });\n}","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/hooks/useAuth.js"],"names":["fetch","useSWR","Router","Cookie","useAuth","initialData","data","user","route","authRequest","header","authorization","get","ok","json","remove","logout"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,OAAT,CAAiBC,WAAjB,EAA8B;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiBN,MAAM,CAC3B,WAD2B,EAE3B,MAAOO,KAAP,IAAiB;AACf,UAAMC,WAAW,GAAG,MAAMT,KAAK,CAACQ,KAAD,EAAQ;AACrCE,MAAAA,MAAM,EAAE;AACNC,QAAAA,aAAa,EAAER,MAAM,CAACS,GAAP,CAAW,MAAX;AADT;AAD6B,KAAR,CAA/B;;AAMA,QAAIH,WAAW,CAACI,EAAhB,EAAoB;AAClB,aAAOJ,WAAW,CAACK,IAAZ,EAAP;AACD,KAFD,MAEO;AACLX,MAAAA,MAAM,CAACY,MAAP,CAAc,MAAd;AACD;AACF,GAd0B,EAe3B;AAAEV,IAAAA;AAAF,GAf2B,CAA7B;AAkBA,yCACKE,IADL;AAEES,IAAAA,MAAM,GAAG;AACPb,MAAAA,MAAM,CAACY,MAAP,CAAc,MAAd;AACD;;AAJH;AAMD","sourcesContent":["\nimport fetch from \"isomorphic-unfetch\";\nimport useSWR from \"swr\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\n\nexport default function useAuth(initialData) {\n  const { data: user } = useSWR(\n    \"/api/user\",\n    async (route) => {\n      const authRequest = await fetch(route, {\n        header: {\n          authorization: Cookie.get(\"_wsp\"),\n        },\n      });\n\n      if (authRequest.ok) {\n        return authRequest.json();\n      } else {\n        Cookie.remove(\"_wsp\");\n      }\n    },\n    { initialData }\n  );\n\n  return {\n    ...user,\n    logout() {\n      Cookie.remove(\"_wsp\");\n    },\n  };\n}"]},"metadata":{},"sourceType":"module"}