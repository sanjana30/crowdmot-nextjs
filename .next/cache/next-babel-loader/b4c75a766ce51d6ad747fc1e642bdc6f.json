{"ast":null,"code":"import { withBasicIdentities } from 'shared/models/node/index';\n\nvar canClearRedundantIncidents = function canClearRedundantIncidents(state) {\n  return {\n    clearRedundantIncidents: function clearRedundantIncidents(status) {\n      var incidents = state.incidents;\n\n      for (var i = incidents.length - 1; i > 0; i -= 1) {\n        if (incidents[i].status === status && incidents[i].status === incidents[i - 1].status) {\n          incidents.splice(i, 1);\n        }\n      }\n    }\n  };\n};\n\nvar Rectangle = function Rectangle(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      label = _ref.label,\n      color = _ref.color,\n      _ref$isManipulatable = _ref.isManipulatable,\n      isManipulatable = _ref$isManipulatable === void 0 ? true : _ref$isManipulatable,\n      _ref$incidents = _ref.incidents,\n      incidents = _ref$incidents === void 0 ? [] : _ref$incidents,\n      _ref$childrenNames = _ref.childrenNames,\n      childrenNames = _ref$childrenNames === void 0 ? [] : _ref$childrenNames,\n      _ref$parentName = _ref.parentName,\n      parentName = _ref$parentName === void 0 ? '' : _ref$parentName;\n  var state = {\n    color: color,\n    isManipulatable: isManipulatable,\n    incidents: incidents,\n    childrenNames: childrenNames,\n    parentName: parentName\n  };\n  return Object.assign(state, withBasicIdentities({\n    id: id,\n    name: name,\n    label: label\n  }), canClearRedundantIncidents(state));\n};\n\nexport { Rectangle };","map":null,"metadata":{},"sourceType":"module"}