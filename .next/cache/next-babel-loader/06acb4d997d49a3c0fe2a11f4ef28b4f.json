{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Rect } from 'react-konva';\n\nvar handleMouseOver = function handleMouseOver(e, isManipulatable) {\n  if (!isManipulatable) return;\n  var activeAnchor = e.target;\n\n  switch (activeAnchor.getName()) {\n    case 'topLeft':\n    case 'bottomRight':\n      document.body.style.cursor = 'nwse-resize';\n      break;\n\n    case 'topRight':\n    case 'bottomLeft':\n      document.body.style.cursor = 'nesw-resize';\n      break;\n\n    case 'top':\n    case 'bottom':\n      document.body.style.cursor = 'ns-resize';\n      break;\n\n    case 'left':\n    case 'right':\n      document.body.style.cursor = 'ew-resize';\n      break;\n\n    default:\n      break;\n  }\n};\n\nvar handleMouseDown = function handleMouseDown(e, isManipulatable, onMouseDown) {\n  if (!isManipulatable) return;\n  var group = e.target.findAncestor('Group');\n  group.draggable(false);\n  group.moveToTop();\n  e.target.moveToTop();\n  onMouseDown(e);\n};\n\nvar handleDragMove = function handleDragMove(e, canvasWidth, canvasHeight) {\n  var activeAnchor = e.target;\n  var group = activeAnchor.getParent();\n  var topLeft = group.get('.topLeft')[0];\n  var topRight = group.get('.topRight')[0];\n  var bottomRight = group.get('.bottomRight')[0];\n  var bottomLeft = group.get('.bottomLeft')[0];\n  var top = group.get('.top')[0];\n  var left = group.get('.left')[0];\n  var right = group.get('.right')[0];\n  var bottom = group.get('.bottom')[0];\n  var rect = group.get('Rect')[0];\n  var text = group.get('Text')[0];\n  var resizedWidth;\n  var resizedHeight; // set box resizing boundary\n\n  var absX = activeAnchor.getAbsolutePosition().x;\n  var absY = activeAnchor.getAbsolutePosition().y;\n  absX = absX < 0 ? 0 : absX;\n  absY = absY < 0 ? 0 : absY;\n  absX = absX > canvasWidth ? canvasWidth : absX;\n  absY = absY > canvasHeight ? canvasHeight : absY;\n  activeAnchor.setAbsolutePosition({\n    x: absX,\n    y: absY\n  });\n  var anchorX = activeAnchor.getX();\n  var anchorY = activeAnchor.getY(); // update anchor positions\n\n  switch (activeAnchor.getName()) {\n    case 'topLeft':\n      topRight.y(anchorY);\n      top.y(anchorY);\n      bottomLeft.x(anchorX);\n      left.x(anchorX);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      top.x(anchorX + resizedWidth / 2);\n      left.y(anchorY + resizedHeight / 2);\n      right.y(anchorY + resizedHeight / 2);\n      bottom.x(anchorX + resizedWidth / 2);\n      text.x(anchorX);\n      text.y(anchorY);\n      break;\n\n    case 'topRight':\n      topLeft.y(anchorY);\n      top.y(anchorY);\n      bottomRight.x(anchorX);\n      right.x(anchorX);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      top.x(anchorX - resizedWidth / 2);\n      left.y(anchorY + resizedHeight / 2);\n      right.y(anchorY + resizedHeight / 2);\n      bottom.x(anchorX - resizedWidth / 2);\n      text.y(anchorY);\n      text.x(anchorX - resizedWidth);\n      break;\n\n    case 'bottomRight':\n      bottomLeft.y(anchorY);\n      bottom.y(anchorY);\n      topRight.x(anchorX);\n      right.x(anchorX);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      top.x(anchorX - resizedWidth / 2);\n      left.y(anchorY - resizedHeight / 2);\n      right.y(anchorY - resizedHeight / 2);\n      bottom.x(anchorX - resizedWidth / 2);\n      text.x(anchorX - resizedWidth);\n      break;\n\n    case 'bottomLeft':\n      bottomRight.y(anchorY);\n      bottom.y(anchorY);\n      topLeft.x(anchorX);\n      left.x(anchorX);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      top.x(anchorX + resizedWidth / 2);\n      left.y(anchorY - resizedHeight / 2);\n      right.y(anchorY - resizedHeight / 2);\n      bottom.x(anchorX + resizedWidth / 2);\n      text.x(anchorX);\n      break;\n\n    case 'top':\n      topLeft.y(anchorY);\n      topRight.y(anchorY);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      top.x(topLeft.x() + resizedWidth / 2);\n      left.y(anchorY + resizedHeight / 2);\n      right.y(anchorY + resizedHeight / 2);\n      text.y(anchorY);\n      break;\n\n    case 'left':\n      topLeft.x(anchorX);\n      bottomLeft.x(anchorX);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      left.y(topLeft.y() + resizedHeight / 2);\n      top.x(anchorX + resizedWidth / 2);\n      bottom.x(anchorX + resizedWidth / 2);\n      text.x(anchorX);\n      break;\n\n    case 'right':\n      topRight.x(anchorX);\n      bottomRight.x(anchorX);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      right.y(topLeft.y() + resizedHeight / 2);\n      top.x(anchorX - resizedWidth / 2);\n      bottom.x(anchorX - resizedWidth / 2);\n      text.x(anchorX - resizedWidth);\n      break;\n\n    case 'bottom':\n      bottomLeft.y(anchorY);\n      bottomRight.y(anchorY);\n      resizedHeight = bottomRight.y() - topLeft.y();\n      resizedWidth = bottomRight.x() - topLeft.x();\n      bottom.x(topLeft.x() + resizedWidth / 2);\n      left.y(anchorY - resizedHeight / 2);\n      right.y(anchorY - resizedHeight / 2);\n      break;\n\n    default:\n      break;\n  }\n\n  group.x(topLeft.getAbsolutePosition().x);\n  group.y(topLeft.getAbsolutePosition().y);\n  topLeft.position({\n    x: 0,\n    y: 0\n  });\n  top.position({\n    x: resizedWidth / 2,\n    y: 0\n  });\n  topRight.position({\n    x: resizedWidth,\n    y: 0\n  });\n  left.position({\n    x: 0,\n    y: resizedHeight / 2\n  });\n  bottomLeft.position({\n    x: 0,\n    y: resizedHeight\n  });\n  right.position({\n    x: resizedWidth,\n    y: resizedHeight / 2\n  });\n  bottom.position({\n    x: resizedWidth / 2,\n    y: resizedHeight\n  });\n  bottomRight.position({\n    x: resizedWidth,\n    y: resizedHeight\n  });\n  rect.position(topLeft.position());\n  rect.width(resizedWidth);\n  rect.height(resizedHeight);\n  text.position({\n    x: 0,\n    y: 0\n  });\n};\n\nvar ResizingAnchor = function ResizingAnchor(_ref) {\n  var dotLength = _ref.dotLength,\n      color = _ref.color,\n      isManipulatable = _ref.isManipulatable,\n      x = _ref.x,\n      y = _ref.y,\n      name = _ref.name,\n      _onDragEnd = _ref.onDragEnd,\n      _onMouseDown = _ref.onMouseDown,\n      canvasWidth = _ref.canvasWidth,\n      canvasHeight = _ref.canvasHeight;\n  return __jsx(Rect, {\n    offsetX: dotLength / 2,\n    offsetY: dotLength / 2,\n    x: x,\n    y: y,\n    key: name,\n    name: name,\n    stroke: color,\n    fill: color,\n    strokeWidth: 0,\n    width: dotLength,\n    height: dotLength,\n    draggable: isManipulatable,\n    dragOnTop: false,\n    onDragMove: function onDragMove(e) {\n      return handleDragMove(e, canvasWidth, canvasHeight);\n    },\n    onMouseDown: function onMouseDown(e) {\n      return handleMouseDown(e, isManipulatable, _onMouseDown);\n    },\n    onDragEnd: function onDragEnd(e) {\n      document.body.style.cursor = 'default';\n\n      _onDragEnd(e);\n    },\n    onMouseOver: function onMouseOver(e) {\n      return handleMouseOver(e, isManipulatable);\n    },\n    onMouseOut: function onMouseOut() {\n      document.body.style.cursor = 'default';\n    },\n    onFocus: function onFocus() {},\n    onBlur: function onBlur() {}\n  });\n};\n\nResizingAnchor.defaultProps = {\n  dotLength: 6,\n  color: '#fff',\n  canvasWidth: 0,\n  canvasHeight: 0,\n  isManipulatable: true,\n  x: 0,\n  y: 0,\n  name: '',\n  onDragEnd: function onDragEnd() {},\n  onMouseDown: function onMouseDown() {}\n};\nexport default ResizingAnchor;","map":null,"metadata":{},"sourceType":"module"}