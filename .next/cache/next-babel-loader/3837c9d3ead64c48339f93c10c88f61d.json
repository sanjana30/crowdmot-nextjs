{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/VideoPlayer/FormattedTime/FormattedTime.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar pad = function pad(string, digits) {\n  return ('0'.repeat(digits - 1) + string).slice(-digits);\n};\n\nvar format = function format(seconds) {\n  var date = new Date(seconds * 1000);\n  var hh = date.getUTCHours();\n  var mm = pad(date.getUTCMinutes(), 2);\n  var ss = pad(date.getUTCSeconds(), 2);\n  var ms = pad(date.getUTCMilliseconds(), 3);\n\n  if (hh) {\n    return \"\".concat(hh, \":\").concat(mm, \":\").concat(ss, \":\").concat(ms);\n  }\n\n  return \"\".concat(mm, \":\").concat(ss, \":\").concat(ms);\n};\n\nvar FormattedTime = function FormattedTime(_ref) {\n  var className = _ref.className,\n      seconds = _ref.seconds;\n  return __jsx(\"time\", {\n    dateTime: \"P\".concat(Math.round(seconds), \"S\"),\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 2\n    }\n  }, format(seconds));\n};\n\nFormattedTime.propTypes = {\n  className: PropTypes.string,\n  seconds: PropTypes.number\n};\nFormattedTime.defaultProps = {\n  className: '',\n  seconds: 0\n};\nexport default FormattedTime;","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/VideoPlayer/FormattedTime/FormattedTime.jsx"],"names":["React","PropTypes","pad","string","digits","repeat","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","ms","getUTCMilliseconds","FormattedTime","className","Math","round","propTypes","number","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,MAAD,EAASC,MAAT;AAAA,SAAoB,CAAC,IAAIC,MAAJ,CAAWD,MAAM,GAAG,CAApB,IAAyBD,MAA1B,EAAkCG,KAAlC,CAAwC,CAACF,MAAzC,CAApB;AAAA,CAAZ;;AAEA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAa;AAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAO,GAAG,IAAnB,CAAb;AACA,MAAMG,EAAE,GAAGF,IAAI,CAACG,WAAL,EAAX;AACA,MAAMC,EAAE,GAAGX,GAAG,CAACO,IAAI,CAACK,aAAL,EAAD,EAAuB,CAAvB,CAAd;AACA,MAAMC,EAAE,GAAGb,GAAG,CAACO,IAAI,CAACO,aAAL,EAAD,EAAuB,CAAvB,CAAd;AACA,MAAMC,EAAE,GAAGf,GAAG,CAACO,IAAI,CAACS,kBAAL,EAAD,EAA4B,CAA5B,CAAd;;AACA,MAAIP,EAAJ,EAAQ;AACP,qBAAUA,EAAV,cAAgBE,EAAhB,cAAsBE,EAAtB,cAA4BE,EAA5B;AACA;;AACD,mBAAUJ,EAAV,cAAgBE,EAAhB,cAAsBE,EAAtB;AACA,CAVD;;AAYA,IAAME,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcZ,OAAd,QAAcA,OAAd;AAAA,SACrB;AAAM,IAAA,QAAQ,aAAOa,IAAI,CAACC,KAAL,CAAWd,OAAX,CAAP,MAAd;AAA8C,IAAA,SAAS,EAAGY,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,MAAM,CAACC,OAAD,CADT,CADqB;AAAA,CAAtB;;AAMAW,aAAa,CAACI,SAAd,GAA0B;AACzBH,EAAAA,SAAS,EAAEnB,SAAS,CAACE,MADI;AAEzBK,EAAAA,OAAO,EAAEP,SAAS,CAACuB;AAFM,CAA1B;AAIAL,aAAa,CAACM,YAAd,GAA6B;AAC5BL,EAAAA,SAAS,EAAE,EADiB;AAE5BZ,EAAAA,OAAO,EAAE;AAFmB,CAA7B;AAKA,eAAeW,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst pad = (string, digits) => ('0'.repeat(digits - 1) + string).slice(-digits);\n\nconst format = (seconds) => {\n\tconst date = new Date(seconds * 1000);\n\tconst hh = date.getUTCHours();\n\tconst mm = pad(date.getUTCMinutes(), 2);\n\tconst ss = pad(date.getUTCSeconds(), 2);\n\tconst ms = pad(date.getUTCMilliseconds(), 3);\n\tif (hh) {\n\t\treturn `${hh}:${mm}:${ss}:${ms}`;\n\t}\n\treturn `${mm}:${ss}:${ms}`;\n};\n\nconst FormattedTime = ({ className, seconds }) => (\n\t<time dateTime={ `P${Math.round(seconds)}S` } className={ className }>\n\t\t{ format(seconds) }\n\t</time>\n);\n\nFormattedTime.propTypes = {\n\tclassName: PropTypes.string,\n\tseconds: PropTypes.number,\n};\nFormattedTime.defaultProps = {\n\tclassName: '',\n\tseconds: 0,\n};\n\nexport default FormattedTime;\n"]},"metadata":{},"sourceType":"module"}