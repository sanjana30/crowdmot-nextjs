{"ast":null,"code":"var _jsxFileName = \"/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/IncidentList/IncidentList.jsx\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { MdDelete } from 'react-icons/md';\nimport { FaArrowDown } from 'react-icons/fa';\nimport RoundedNumber from 'shared/components/Math/RoundedNumber/RoundedNumber.jsx';\nimport TwoDimensionalVideoContext from '../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport Duration from '../VideoPlayer/FormattedTime/FormattedTime.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './incidentList.scss';\n\nconst IncidentList = ({\n  className,\n  annotationName,\n  incidents\n}) => {\n  const {\n    t\n  } = useTranslation('twoDimensionalVideo');\n  const twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n  const {\n    played,\n    duration,\n    onIncidentItemClick,\n    onIncidentItemDeleteClick\n  } = twoDimensionalVideoContext;\n  const incidentListUI = incidents.map((incident, index) => {\n    const {\n      name,\n      time,\n      width,\n      height,\n      status,\n      x,\n      y\n    } = incident;\n    const itemButtonStyle = {};\n\n    if (time === played) {\n      itemButtonStyle.color = 'rgb(33, 37, 41)';\n    }\n\n    const isNotLastIncidentAndPlayedBetweenCurrentAndNext = index !== incidents.length - 1 && played > time && played < incidents[index + 1].time;\n    const isLastIncidentAndPlayedOverCurrent = index === incidents.length - 1 && played > time;\n    const arrowDown = isNotLastIncidentAndPlayedBetweenCurrentAndNext || isLastIncidentAndPlayedOverCurrent ? __jsx(ListGroupItem, {\n      key: time + 1,\n      className: \"incident-list__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, __jsx(FaArrowDown, {\n      style: {\n        color: '',\n        fontSize: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }\n    })) : null;\n    return __jsx(Fragment, {\n      key: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, __jsx(ListGroupItem, {\n      key: time,\n      className: \"incident-list__item d-flex align-items-center justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, __jsx(Button, {\n      color: \"link\",\n      className: \"incident-list__item-button d-flex justify-content-between\",\n      style: itemButtonStyle,\n      onClick: () => onIncidentItemClick({\n        time,\n        annotationName\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }\n    }, __jsx(\"div\", {\n      className: \"incident-list__item-status pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }\n    }, status), ' ', __jsx(Duration, {\n      className: \"incident-list__item-duration\",\n      seconds: duration * time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }\n    })), __jsx(\"div\", {\n      className: \"incident-list__item-size pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }\n    }, t('incidentSize')), ' ', __jsx(RoundedNumber, {\n      number: width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }\n    }), 'x', __jsx(RoundedNumber, {\n      number: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    })), __jsx(\"div\", {\n      className: \"incident-list__item-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }\n    }, t('incidentPosition')), ' ', __jsx(RoundedNumber, {\n      number: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }), ':', __jsx(RoundedNumber, {\n      number: y,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }\n    }))), __jsx(Button, {\n      className: \"incident-list__item-delete-button\",\n      color: \"link\",\n      onClick: () => onIncidentItemDeleteClick({\n        annotationName,\n        incidentName: name\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }, __jsx(MdDelete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }))), arrowDown);\n  });\n  const rootClassName = `incident-list px-3 py-2 text-center${className ? ` ${className}` : ''}`;\n  return __jsx(ListGroup, {\n    className: rootClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, incidentListUI);\n};\n\nIncidentList.propTypes = {\n  className: PropTypes.string,\n  annotationName: PropTypes.string,\n  incidents: PropTypes.arrayOf(PropTypes.object)\n};\nIncidentList.defaultProps = {\n  className: '',\n  annotationName: '',\n  incidents: []\n};\nexport default IncidentList;","map":{"version":3,"sources":["/Applications/CrowdMOT/crowdmot-nextjs/components/two-dimensional-video/components/IncidentList/IncidentList.jsx"],"names":["React","Fragment","useContext","PropTypes","useTranslation","ListGroup","ListGroupItem","Button","MdDelete","FaArrowDown","RoundedNumber","TwoDimensionalVideoContext","Duration","IncidentList","className","annotationName","incidents","t","twoDimensionalVideoContext","played","duration","onIncidentItemClick","onIncidentItemDeleteClick","incidentListUI","map","incident","index","name","time","width","height","status","x","y","itemButtonStyle","color","isNotLastIncidentAndPlayedBetweenCurrentAndNext","length","isLastIncidentAndPlayedOverCurrent","arrowDown","fontSize","incidentName","rootClassName","propTypes","string","arrayOf","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n\tListGroup, ListGroupItem, Button,\n} from 'reactstrap';\nimport { MdDelete } from 'react-icons/md';\nimport { FaArrowDown } from 'react-icons/fa';\nimport RoundedNumber from 'shared/components/Math/RoundedNumber/RoundedNumber.jsx';\nimport TwoDimensionalVideoContext from '../TwoDimensionalVideo/twoDimensionalVideoContext';\nimport Duration from '../VideoPlayer/FormattedTime/FormattedTime.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './incidentList.scss';\n\nconst IncidentList = ({\n\tclassName,\n\tannotationName,\n\tincidents,\n}) => {\n\tconst { t } = useTranslation('twoDimensionalVideo');\n\tconst twoDimensionalVideoContext = useContext(TwoDimensionalVideoContext);\n\tconst {\n\t\tplayed,\n\t\tduration,\n\t\tonIncidentItemClick,\n\t\tonIncidentItemDeleteClick,\n\t} = twoDimensionalVideoContext;\n\tconst incidentListUI = incidents.map((incident, index) => {\n\t\tconst {\n\t\t\tname,\n\t\t\ttime,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tstatus,\n\t\t\tx,\n\t\t\ty,\n\t\t} = incident;\n\n\t\tconst itemButtonStyle = {};\n\t\tif (time === played) {\n\t\t\titemButtonStyle.color = 'rgb(33, 37, 41)';\n\t\t}\n\t\tconst isNotLastIncidentAndPlayedBetweenCurrentAndNext = (\n\t\t\tindex !== incidents.length - 1 &&\n\t\t\tplayed > time &&\n\t\t\tplayed < incidents[index + 1].time\n\t\t);\n\t\tconst isLastIncidentAndPlayedOverCurrent = (index === incidents.length - 1 && played > time);\n\t\tconst arrowDown = isNotLastIncidentAndPlayedBetweenCurrentAndNext || isLastIncidentAndPlayedOverCurrent ?\n\t\t\t(\n\t\t\t\t<ListGroupItem key={ time + 1 } className='incident-list__item'>\n\t\t\t\t\t<FaArrowDown style={ { color: '', fontSize: '1em' } } />\n\t\t\t\t</ListGroupItem>\n\t\t\t) : null;\n\n\t\treturn (\n\t\t\t<Fragment key={ time }>\n\t\t\t\t<ListGroupItem\n\t\t\t\t\tkey={ time }\n\t\t\t\t\tclassName='incident-list__item d-flex align-items-center justify-content-between'\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='link'\n\t\t\t\t\t\tclassName='incident-list__item-button d-flex justify-content-between'\n\t\t\t\t\t\tstyle={ itemButtonStyle }\n\t\t\t\t\t\tonClick={ () => onIncidentItemClick({ time, annotationName }) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className='incident-list__item-status pr-1'>\n\t\t\t\t\t\t\t<b>{ status }</b>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<Duration className='incident-list__item-duration' seconds={ duration * time } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='incident-list__item-size pr-1'>\n\t\t\t\t\t\t\t<b>{ t('incidentSize') }</b>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<RoundedNumber number={ width } />\n\t\t\t\t\t\t\t{'x'}\n\t\t\t\t\t\t\t<RoundedNumber number={ height } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='incident-list__item-position'>\n\t\t\t\t\t\t\t<b>{ t('incidentPosition') }</b>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<RoundedNumber number={ x } />\n\t\t\t\t\t\t\t{':'}\n\t\t\t\t\t\t\t<RoundedNumber number={ y } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName='incident-list__item-delete-button'\n\t\t\t\t\t\tcolor='link'\n\t\t\t\t\t\tonClick={ () => onIncidentItemDeleteClick({ annotationName, incidentName: name }) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<MdDelete />\n\t\t\t\t\t</Button>\n\t\t\t\t</ListGroupItem>\n\t\t\t\t{arrowDown}\n\t\t\t</Fragment>\n\t\t);\n\t});\n\n\tconst rootClassName = `incident-list px-3 py-2 text-center${className ? ` ${className}` : ''}`;\n\treturn (\n\t\t<ListGroup className={ rootClassName }>\n\t\t\t{incidentListUI}\n\t\t</ListGroup>\n\t);\n};\n\nIncidentList.propTypes = {\n\tclassName: PropTypes.string,\n\tannotationName: PropTypes.string,\n\tincidents: PropTypes.arrayOf(PropTypes.object),\n};\nIncidentList.defaultProps = {\n\tclassName: '',\n\tannotationName: '',\n\tincidents: [],\n};\nexport default IncidentList;\n"]},"metadata":{},"sourceType":"module"}