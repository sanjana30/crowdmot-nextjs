{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useReducer } from 'react';\nimport Button from '../components/Button.js';\nimport Field from '../components/Field.js';\nimport Input from '../components/Input.js';\nimport Label from '../components/Label.js';\nimport EmailService from '../services/email.js';\n\nfunction reducer(state, action) {\n  var _action$value, _action$value2;\n\n  let error;\n\n  switch (action.type) {\n    case 'update-name':\n      error = ((_action$value = action.value) === null || _action$value === void 0 ? void 0 : _action$value.length) < 2 ? 'not valid' : undefined;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.value,\n        errors: _objectSpread(_objectSpread({}, state.errors), {}, {\n          name: error\n        })\n      });\n\n    case 'update-email':\n      error = !EmailService.valid(action.value) ? 'not valid' : undefined;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: action.value,\n        errors: _objectSpread(_objectSpread({}, state.errors), {}, {\n          email: error\n        })\n      });\n\n    case 'update-password':\n      error = ((_action$value2 = action.value) === null || _action$value2 === void 0 ? void 0 : _action$value2.length) < 7 ? 'too short' : undefined;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        password: action.value,\n        errors: _objectSpread(_objectSpread({}, state.errors), {}, {\n          password: error\n        })\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n}\n\nexport default (props => {\n  var _state$errors, _state$errors2, _state$errors3;\n\n  const {\n    0: isSignUp,\n    1: setIsSignUp\n  } = useState(false); //{name: String, password: String, email: String, error: {name, password, email}}\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, {});\n\n  const hasError = () => {\n    if (isSignUp) {\n      //check name, email, password\n      return !(state.name && state.email && state.password) || state.errors.name != undefined || state.errors.email != undefined || state.errors.password != undefined // Object.values(state.errors ?? {}).filter(Boolean).length > 0\n      ;\n    } else {\n      //check email , password\n      return !(state.email && state.password) || state.errors.email != undefined || state.errors.password != undefined // Object.values(state.errors ?? {}).filter(Boolean).length >0\n      ;\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-4037609192\" + \" \" + \"page\"\n  }, __jsx(\"div\", {\n    className: \"jsx-4037609192\" + \" \" + \"form\"\n  }, isSignUp && __jsx(React.Fragment, null, __jsx(Field, null, __jsx(Label, {\n    error: (_state$errors = state.errors) === null || _state$errors === void 0 ? void 0 : _state$errors.name\n  }, \" Name\"), __jsx(Input, {\n    name: \"name\",\n    type: \"text\",\n    value: state.name,\n    onChange: ({\n      target\n    }) => dispatch({\n      type: 'update-name',\n      value: target.value\n    })\n  }))), __jsx(Field, null, __jsx(Label, {\n    error: (_state$errors2 = state.errors) === null || _state$errors2 === void 0 ? void 0 : _state$errors2.email\n  }, \" Email\"), __jsx(Input, {\n    name: \"email\",\n    type: \"email\",\n    value: state.email,\n    onChange: ({\n      target\n    }) => dispatch({\n      type: 'update-email',\n      value: target.value\n    })\n  })), __jsx(Field, null, __jsx(Label, {\n    error: (_state$errors3 = state.errors) === null || _state$errors3 === void 0 ? void 0 : _state$errors3.password\n  }, \" Password\"), __jsx(Input, {\n    name: \"password\",\n    type: \"password\",\n    value: state.password,\n    onChange: ({\n      target\n    }) => dispatch({\n      type: 'update-password',\n      value: target.value\n    })\n  })), __jsx(Button, {\n    disabled: hasError()\n  }, isSignUp ? \"Sign up\" : \"Log in\"), __jsx(\"p\", {\n    className: \"jsx-4037609192\" + \" \" + \"log-in-prompt\"\n  }, isSignUp ? \"Have\" : \"Need\", \" an account?\", __jsx(\"span\", {\n    className: \"jsx-4037609192\" + \" \" + \"small\"\n  }, \"Click below, fill out the form, et voila!\")), __jsx(Button, {\n    onClick: () => setIsSignUp(!isSignUp)\n  }, isSignUp ? \"Log in\" : \"Sign up\"), __jsx(\"p\", {\n    className: \"jsx-4037609192\" + \" \" + \"error\"\n  }, \"errors?.auth\", \" \"))), __jsx(_JSXStyle, {\n    id: \"4037609192\"\n  }, [\".error.jsx-4037609192{text-align:center;color:var(--error);}\", \".page.jsx-4037609192{width:100%;min-height:100vh;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\", \".log-in-prompt.jsx-4037609192{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-top:0.25rem;}\", \".log-in-prompt.jsx-4037609192>.small.jsx-4037609192{font-size:0.75rem;opacity:0.6;}\", \".form.jsx-4037609192{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:300px;}\", \".form.jsx-4037609192>.field,.form.jsx-4037609192>.btn{margin-bottom:0.5rem;}\"]));\n});","map":null,"metadata":{},"sourceType":"module"}